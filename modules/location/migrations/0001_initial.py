# Generated by Django 5.2.4 on 2025-07-12 17:22

import django.core.validators
import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HealthFacilityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Facility Type Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Health Facility Type',
                'verbose_name_plural': 'Health Facility Types',
                'db_table': 'tblHealthFacilityTypes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the location type (e.g., Country, State, City)', max_length=100, unique=True, verbose_name='Location Type Name')),
                ('level', models.PositiveSmallIntegerField(help_text='Hierarchy level (1 for highest level, increasing for lower levels)', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Hierarchy Level')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Location Type',
                'verbose_name_plural': 'Location Types',
                'db_table': 'tblLocationTypes',
                'ordering': ['level', 'name'],
                'constraints': [models.UniqueConstraint(fields=('level',), name='unique_location_type_level')],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the location', max_length=100, verbose_name='Location Name')),
                ('code', models.CharField(blank=True, help_text='Optional unique code for the location', max_length=20, null=True, unique=True, verbose_name='Location Code')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this location is currently active', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text='Parent location in the hierarchy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='location.location', verbose_name='Parent Location')),
                ('type', models.ForeignKey(help_text='Type of this location', on_delete=django.db.models.deletion.PROTECT, to='location.locationtype', verbose_name='Location Type')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'tblLocations',
                'ordering': ['tree_id', 'lft'],
            },
        ),
        migrations.CreateModel(
            name='HealthFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique identifier code for the facility', max_length=50, unique=True, verbose_name='Facility Code')),
                ('name', models.CharField(help_text='Official name of the health facility', max_length=200, verbose_name='Facility Name')),
                ('description', models.TextField(blank=True, help_text='Additional details about the facility', null=True, verbose_name='Facility Description')),
                ('address', models.TextField(blank=True, help_text='Street address and other location details', null=True, verbose_name='Physical Address')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this facility is currently operational', verbose_name='Is Active')),
                ('established_date', models.DateField(blank=True, help_text='Date when the facility was established', null=True, verbose_name='Established Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facility_type', models.ForeignKey(help_text='Type of health facility', on_delete=django.db.models.deletion.PROTECT, to='location.healthfacilitytype', verbose_name='Facility Type')),
                ('location', models.ForeignKey(help_text='Geographic location of the facility', on_delete=django.db.models.deletion.PROTECT, to='location.location', verbose_name='Facility Location')),
            ],
            options={
                'verbose_name': 'Health Facility',
                'verbose_name_plural': 'Health Facilities',
                'db_table': 'tblHealthFacilities',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['is_active'], name='tblHealthFa_is_acti_61b7b5_idx'), models.Index(fields=['location'], name='tblHealthFa_locatio_67a5f0_idx'), models.Index(fields=['facility_type'], name='tblHealthFa_facilit_bf4cc2_idx'), models.Index(fields=['code'], name='tblHealthFa_code_fda461_idx')],
                'constraints': [models.UniqueConstraint(fields=('name', 'location'), name='unique_facility_name_per_location')],
            },
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['is_active'], name='tblLocation_is_acti_9d2fac_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['type'], name='tblLocation_type_id_25693d_idx'),
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.UniqueConstraint(fields=('name', 'parent'), name='unique_location_name_per_parent'),
        ),
    ]
