# Generated by Django 5.2.4 on 2025-08-10 14:08

import datetime
import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('location', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name='healthfacility',
            old_name='created_at',
            new_name='created_date',
        ),
        migrations.RenameField(
            model_name='healthfacility',
            old_name='updated_at',
            new_name='last_modified',
        ),
        migrations.AddField(
            model_name='healthfacility',
            name='validity_from',
            field=models.DateTimeField(db_column='ValidityFrom', default=datetime.datetime.now),
        ),
        migrations.AddField(
            model_name='healthfacility',
            name='validity_to',
            field=models.DateTimeField(blank=True, db_column='ValidityTo', null=True),
        ),
        migrations.AlterField(
            model_name='healthfacility',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name='HistoricalHealthFacility',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('code', models.CharField(db_index=True, help_text='Unique identifier code for the facility', max_length=50, verbose_name='Facility Code')),
                ('name', models.CharField(help_text='Official name of the health facility', max_length=200, verbose_name='Facility Name')),
                ('description', models.TextField(blank=True, help_text='Additional details about the facility', null=True, verbose_name='Facility Description')),
                ('address', models.TextField(blank=True, help_text='Street address and other location details', null=True, verbose_name='Physical Address')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this facility is currently operational', verbose_name='Is Active')),
                ('established_date', models.DateField(blank=True, help_text='Date when the facility was established', null=True, verbose_name='Established Date')),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('last_modified', models.DateTimeField(blank=True, editable=False)),
                ('validity_from', models.DateTimeField(db_column='ValidityFrom', default=datetime.datetime.now)),
                ('validity_to', models.DateTimeField(blank=True, db_column='ValidityTo', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('facility_type', models.ForeignKey(blank=True, db_constraint=False, help_text='Type of health facility', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.healthfacilitytype', verbose_name='Facility Type')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, help_text='Geographic location of the facility', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.location', verbose_name='Facility Location')),
            ],
            options={
                'verbose_name': 'historical Health Facility',
                'verbose_name_plural': 'historical Health Facilities',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
